- name: WP-CLIのインストール
  copy:
    src: wp-cli.phar
    dest: /usr/local/bin/wp
    mode: u=rx,g=x,o=x
    owner: "{{ user_name }}"
    group: "{{ user_group }}"
  tags: [wp]

- stat: path={{ document_root }}/wp/wp-config.php
  register: is_wp_configured
  tags: [wp]

- name: WordPressの最新版をダウンロード
  get_url:
    url: https://ja.wordpress.org/latest-ja.tar.gz
    dest: "{{ document_root }}/wp.tar.gz"
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: 解凍
  command: chdir={{ document_root }} /bin/tar xvf wp.tar.gz creates={{ document_root }}/wp
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: アーカイブを削除
  command: rm {{ document_root }}/wp.tar.gz
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: Wordpressのフォルダ名を、wpに変更
  command: mv {{ document_root }}/wordpress {{ document_root }}/wp creates={{ document_root }}/wp
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: AkismetとWP Multibite Patchを更新
  command: cp -rf {{ document_root }}/wp/wp-content/plugins/{{ item }} {{ document_root }}/assets/plugins/
  with_items:
    - akismet
    - wp-multibyte-patch
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: 翻訳ファイルを更新
  command: cp -rf {{ document_root }}/wp/wp-content/languages {{ document_root }}/assets/
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: デフォルトテーマを更新
  command: cp -rf {{ document_root }}/wp/wp-content/themes/{{ item }} {{ document_root }}/assets/themes
  with_items:
    - twentysixteen
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: Random saltsを取得
  local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"
  sudo: no
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: wp-config.phpを作成
  template:
    src: wp-config.php
    dest: "{{ document_root }}/wp/wp-config.php"
  when: not is_wp_configured.stat.exists
  tags: [wp]

- name: wp-config-sample.phpを作成
  template:
    src: wp-config.php
    dest: "{{ document_root }}/wp/wp-config-sample.php"
  when: not is_wp_configured.stat.exists
  tags: [wp]

- stat: path={{ document_root }}/index.php
  register: is_wp_init
  tags: [wp]


# - name: 初期化
#   shell: |
#     core install --path={{ document_root }}/wp --url=http://{{ hostname }} --title={{ wp_sitename | quote }} --admin_user={{ wp_admin }} --admin_password={{ wp_password | quote }} --admin_email={{ wp_email }} --skip-email
#   args:
#     executable: /usr/local/bin/wp
#   sudo: no
#   when: not is_wp_init.stat.exists
#   tags: [wp]

- name: 初期化用SQLのコピー
  template:
    src: wp-init.sql
    dest: "{{ document_root }}/wp-init.sql"
  when: not is_wp_init.stat.exists
  tags: [wp]

- name: 初期化用SQL実行
  shell: |
    mysql -u {{ user_name }} -p{{ user_password | quote }} {{ mysql_dbname }} < {{ document_root }}/wp-init.sql
  when: not is_wp_init.stat.exists
  tags: [wp]

- name: 初期化用SQL削除
  command: rm {{ document_root }}/wp-init.sql
  ignore_errors: true
  tags: [wp]

- name: index.phpを作成
  template:
    src: index.php
    dest: "{{ document_root }}/index.php"
  when: not is_wp_init.stat.exists
  tags: [wp]

- stat: path={{ document_root }}/.htaccess
  register: is_wp_htaccess
  tags: [wp]

- name: .htaccessを作成
  template:
    src: htaccess.txt
    dest: "{{ document_root }}/.htaccess"
  when: not is_wp_htaccess.stat.exists
  tags: [wp]

- stat: path={{ document_root }}/assets/themes/{{ wp_theme }}
  register: is_wp_theme
  tags: [wp]

- name: Bootstrapテーマを準備
  command: cp -r {{ document_root }}/assets/themes/bootstrap {{ document_root }}/assets/themes/{{ wp_theme }}
  when: not is_wp_theme.stat.exists
  tags: [wp]

- name: 不要なwp-contentを削除
  # args:
  #   removes: "{{ document_root }}/wp/wp-content"
  command: rm -rf {{ document_root }}/wp/wp-content
  when: not is_wp_configured.stat.exists
  tags: [wp]


# Unit Test

- name: Composerを実行
  composer:
    command: 'install'
    working_dir: "{{ project_root }}/www"
    no-dev: no
  sudo: no
  tags: [wp, test]

- stat: path={{ project_root }}/www/vendor/phpunit/phpunit/phpunit
  register: is_phpunit_installed
  tags: [wp, test]

- name: phpunitにパスを通す
  command: |
    ln -s {{ project_root }}/www/vendor/phpunit/phpunit/phpunit {{ bin_path }}/phpunit
  when: is_phpunit_installed.stat.exists
  tags: [wp, test]

- stat: path={{ wp_test_root }}/wp-tests-config.php
  register: is_wptest_configured
  tags: [wp, test]

- name: テスト用DBを作成
  shell: |
    mysql -u {{ mysql_user_name }} -p{{ mysql_user_password }} -e "CREATE DATABASE IF NOT EXISTS {{ mysql_dbname_for_test }};"
  tags: [wp, test]

- name: test.sqlを実行
  shell: |
    mysql -u {{ mysql_user_name }} -p{{ mysql_user_password }} {{ mysql_dbname_for_test }} << {{ project_root }}/sql/test.sql
  tags: [wp, test]

- name: wp-tests-config.phpを作成
  template:
    src: wp-tests-config.php
    dest: "{{ wp_test_root }}/wp-tests-config.php"
  when: not is_wptest_configured.stat.exists
  tags: [wp, test]